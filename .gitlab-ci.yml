
#before_script:
#  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


.workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9].[0-9].[0-9]$/
      when: on_success
    - if: $CI_COMMIT_BRANCH == "dev"
      when: on_success

variables:
    DOCKER_BUILDKIT: 0

stages:
  - step_build
  - build_image
  - deploy

step_build:
  image: node:16.13.0-alpine3.13
  extends: .workflow
  stage: step_build
  tags: 
    - ffinance
  before_script:
    - apk update && apk add tar 
  script:
    - APP_NAME=${CI_PROJECT_NAME}
    - npm install
    - npm run build
    - ls -lah
    - tar --exclude='.git' -czf "release.tar.gz"  dist public
  artifacts:
    # Beautiful name of the archive to download, so that nothing is confused in Downloads
    name: release_${CI_PROJECT_NAME}_${CI_COMMIT_SHORT_SHA}
    paths:
    - release.tar.gz
    expire_in: 1 hour


build_image:
  stage: build_image
  extends: .workflow
  tags: 
    - ffinance
  image:
  before_script:
    - apk update && apk add tar git
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/ffinance/infra.git
    - cd infra/images/front/
    - mkdir static_for_current_docker_image
    - tar -xpf "../../../release.tar.gz" -C static_for_current_docker_image/
    - docker build -t "${CI_REGISTRY_IMAGE}:${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}"  .
    - docker push "${CI_REGISTRY_IMAGE}:${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}"
  dependencies:
    - step_build


deploy:
  image: registry.gitlab.com/ffinance/infra:manage-1
  extends: .workflow
  stage: deploy
  tags: 
    - ffinance
  before_script:
    - if [[ "${CI_COMMIT_REF_NAME}" == "main" ]]; then TARGET_NAMESPACE="prod"; fi
    - if [[ "${CI_COMMIT_REF_NAME}" == "dev" ]]; then TARGET_NAMESPACE="dev"; fi
    - if [[ -n "${CI_COMMIT_TAG}"  ]]; then TARGET_NAMESPACE="prod"; fi
    - echo "TARGET_NAMESPACE=$TARGET_NAMESPACE"
    - APP_NAME=${CI_PROJECT_NAME}
    - kubectl delete secret -n ${TARGET_NAMESPACE} regcred --ignore-not-found
    - kubectl create secret -n ${TARGET_NAMESPACE} docker-registry regcred --docker-server=${CI_REGISTRY} --docker-username=${CI_REGISTRY_USER} --docker-password=${CI_REGISTRY_PASSWORD} --docker-email=${GITLAB_USER_EMAIL}
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/ffinance/infra.git && cd infra/
    - helm upgrade --install --atomic --wait --timeout=5m $([ -n "${FORCE_DEPLOY}" ] && echo --set dorestartme=$(date +%s) ) --set image.repository="${CI_REGISTRY_IMAGE}:${CI_PROJECT_NAME}" --set image.tag=${CI_COMMIT_SHORT_SHA} -f helm-values/${TARGET_NAMESPACE}-${CI_PROJECT_NAME}.yaml -n "${TARGET_NAMESPACE}" ${APP_NAME} app-common-npm-0.0.1.tgz




